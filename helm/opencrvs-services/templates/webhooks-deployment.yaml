apiVersion: v1
kind: Service
metadata:
  labels:
    app: webhooks
  name: webhooks
spec:
  ports:
    - port: 2525
      targetPort: 2525
  selector:
    app: webhooks
  type: LoadBalancer
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: webhooks-route
spec:
  entryPoints:
    - websecure
  routes:
  - match: 'Host(`webhooks.{{ .Values.hostname }}`)'
    kind: Rule
    services:
    - name: webhooks
      namespace: opencrvs-services-dev
      port: 2525
    middlewares:
      - name: sts-and-basic-response-headers
  # tls:
  #   certResolver: myresolver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webhooks
  name: webhooks
spec:
  replicas: {{ .Values.webhooks.replicas }}
  selector:
    matchLabels:
      app: webhooks
  template:
    metadata:
      labels:
        app: webhooks
    spec:
      containers:
        - name: webhooks
          image: "ghcr.io/opencrvs/ocrvs-webhooks:{{ .Values.image.tag }}"
          env:
            - name: NODE_ENV
              value: development
            - name: QA_ENV
              value: "false"
            - name: AUTH_URL
              value: http://auth.opencrvs-services-dev.svc.cluster.local:4040 # FIXME: harcoded
            - name: CERT_PUBLIC_KEY_PATH
              value: /secrets/public-key.pem
            - name: CERT_PRIVATE_KEY_PATH
              value: /secrets/private-key.pem
            - name: CHECK_INVALID_TOKEN
              value: "true"
            - name: FHIR_URL
              value: http://hearth-1.hearth.opencrvs-deps-dev.svc.cluster.local:3447/fhir # FIXME: harcoded
            - name: HOST
              value: 0.0.0.0
            - name: MONGO_URL
              value: mongodb://mongodb-0.mongodb.opencrvs-deps-dev.svc.cluster.local/webhooks
            - name: REDIS_HOST
              value: redis.opencrvs-deps-dev.svc.cluster.local # FIXME: harcoded
            - name: USER_MANAGEMENT_URL
              value: http://user-mgnt.opencrvs-services-dev.svc.cluster.local:3030/ # FIXME: hardcoded
          ports:
            - containerPort: 2525
              protocol: TCP
          volumeMounts:
            - mountPath: /secrets/public-key.pem
              name: public-key
              subPath: public-key.pem
            - mountPath: /secrets/private-key.pem
              name: private-key
              subPath: private-key.pem
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: public-key.pem
                path: public-key.pem
            name: public-key
          name: public-key
        - secret:
            secretName: private-key
          name: private-key